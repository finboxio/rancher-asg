#cloud-config
write_files:
  - path: /var/spool/cron/crontabs/rancher
    permissions: "0600"
    owner: root
    group: rancher
    content: |
      0 */4 * * * docker run --rm --net host -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker -e RANCHER_CLUSTER_ID=${rancher_url} -e SLACK_WEBHOOK_URL=${slack_webhook} -e SLACK_USERNAME=Rancher -e SLACK_ICON=cow --entrypoint backup finboxio/rancher-asg-server:${version}-latest
  - path: /etc/rc.local
    permissions: "0755"
    owner: root
    content: |
      #!/bin/bash

      # Add entry for mysql.{rancher_url}
      #
      # We need to direct mysql traffic to an ip address that is
      # reachable to hosts within the vpc because some rancher
      # containers are not run in host networking mode
      #
      ip=$(wget -qO- http://169.254.169.254/latest/meta-data/local-ipv4)
      echo "$ip mysql.${rancher_url}" >> /etc/hosts

      # Start the cron service for backups
      crond
rancher:
  services:
    status:
      image: finboxio/rancher-asg-server:${version}-latest
      entrypoint: [ "monitor" ]
      restart: always
      net: host
      environment:
        - CREDENTIALS_FILE=s3://${rancher_s3_bucket}/credentials
        - SLACK_WEBHOOK_URL=${slack_webhook}
        - SLACK_USERNAME=Rancher
        - SLACK_ICON=cow
        - CLUSTER_CAPACITY=${cluster_size}
        - MYSQL_USER=root
        - MYSQL_PASSWORD=${mysql_root_password}
        - EXTERNAL_RANCHER_HOST=${rancher_url}
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /usr/bin/docker:/usr/bin/docker
    last-words:
      image: finboxio/rancher-asg-server:${version}-latest
      entrypoint: [ "last-words" ]
      net: host
      stdin_open: true
      labels:
        - io.rancher.os.scope=system
      environment:
        - SLACK_WEBHOOK_URL=${slack_webhook}
        - SLACK_USERNAME=Rancher
        - SLACK_ICON=cow
    convoy:
      image: finboxio/rancher-asg-server:${version}-latest
      entrypoint: [ "convoy-bootstrap" ]
      restart: always
      net: host
      pid: host
      privileged: true
      volumes:
        - /dev:/host/dev
        - /usr/bin:/host/usr/bin
        - /etc/docker:/host/etc/docker
        - /var/run/convoy:/var/run/convoy
        - /var/lib/rancher/convoy:/var/lib/rancher/convoy
    serf:
      image: finboxio/rancher-asg-server:${version}-latest
      entrypoint: [ "serf-bootstrap" ]
      restart: always
      net: host
      volumes:
        - /etc/serf:/etc/serf
    etcd:
      image: finboxio/rancher-asg-server:${version}-latest
      entrypoint: [ "etcd-bootstrap" ]
      restart: always
      net: host
      labels:
        - io.rancher.os.after=serf
      volumes:
        - /etc/etcd:/etc/etcd
        - /var/run/docker.sock:/var/run/docker.sock
        - /usr/bin/docker:/usr/bin/docker
    etcd-monitor:
      image: finboxio/rancher-asg-server:${version}-latest
      entrypoint: [ "etcd-monitor" ]
      restart: always
      net: host
      labels:
        - io.rancher.os.after=etcd
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /usr/bin/docker:/usr/bin/docker
    confd:
      image: finboxio/rancher-asg-server:${version}-latest
      entrypoint: [ "confd-bootstrap" ]
      restart: always
      net: host
      labels:
        - io.rancher.os.after=etcd
      environment:
        - RANCHER_URL=${rancher_url}
        - HTTPS_REDIRECT=true
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /usr/bin/docker:/usr/bin/docker
        - /etc/haproxy:/usr/local/etc/haproxy
    haproxy:
      image: haproxy:1.6-alpine
      restart: always
      net: host
      labels:
        - io.rancher.os.after=confd
      volumes:
        - /etc/haproxy:/usr/local/etc/haproxy
    mysqlvol:
      image: finboxio/rancher-asg-server:${version}-latest
      entrypoint: [ 'mysql-volume' ]
      restart: always
      net: host
      privileged: true
      labels:
        - io.rancher.os.after=convoy,haproxy
      environment:
        - DATA_DIR=/etc/mysql/data
        - RANCHER_CLUSTER_ID=${rancher_url}
        - MYSQL_HOST=localhost
        - MYSQL_PORT=3306
        - MYSQL_ROOT_PASSWORD=${mysql_root_password}
        - MYSQL_SOCKET=/var/run/mysqld/mysqld.sock
        - MYSQL_USER=${rancher_mysql_user}
        - MYSQL_PASSWORD=${rancher_mysql_password}
        - MYSQL_DATABASE=${rancher_mysql_database}
        - MYSQL_VOLUME_NAME=mysqlvol
        - MYSQL_VOLUME_SIZE=12G
        - MYSQL_IMAGE=finboxio/rancher-asg-server:${version}-latest
      volumes:
        - /var/run:/var/run
        - /usr/bin/docker:/usr/bin/docker
    mysqlchk:
      image: finboxio/rancher-asg-server:${version}-latest
      entrypoint: [ 'mysqlchk-bootstrap' ]
      restart: always
      net: host
      labels:
        - io.rancher.os.after=mysql
      environment:
        - MYSQL_HOST=localhost
        - MYSQL_PORT=3306
        - MYSQL_USER=${rancher_mysql_user}
        - MYSQL_PASSWORD=${rancher_mysql_password}
      volumes:
        - /var/run:/var/run
    shudder:
      image: finboxio/rancher-asg-server:${version}-latest
      entrypoint: [ 'shudder-bootstrap' ]
      restart: on-failure
      net: host
      environment:
        - SQS_PREFIX=${shudder_sqs_prefix}
        - SNS_TOPIC=${shudder_sns_topic}
        - ENDPOINT=http://localhost:9999
    terminator:
      image: finboxio/rancher-asg-server:${version}-latest
      entrypoint: [ 'terminator-bootstrap' ]
      restart: on-failure
      net: host
      environment:
        - CREDENTIALS_FILE=s3://${rancher_s3_bucket}/credentials
        - RANCHER_URL=https://${rancher_url}
        - SLACK_WEBHOOK_URL=${slack_webhook}
        - SLACK_USERNAME=Rancher
        - SLACK_ICON=cow
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /usr/bin/docker:/usr/bin/docker
    rancher-server:
      image: finboxio/rancher-asg-server:${version}-latest
      entrypoint: [ 'rancher-bootstrap' ]
      restart: on-failure
      net: host
      labels:
        - io.rancher.os.after=mysql
      environment:
        - S3_BUCKET=${rancher_s3_bucket}
        - CREDENTIALS_FILE=s3://${rancher_s3_bucket}/credentials
        - MYSQL_ROOT_PASSWORD=${mysql_root_password}
        - RANCHER_URL=${rancher_url}
        - RANCHER_MYSQL_HOST=mysql.${rancher_url}
        - RANCHER_MYSQL_PORT=3307
        - RANCHER_MYSQL_DATABASE=${rancher_mysql_database}
        - RANCHER_MYSQL_USER=${rancher_mysql_user}
        - RANCHER_MYSQL_PASSWORD=${rancher_mysql_password}
        - RANCHER_ADMIN_USER=${rancher_admin_user}
        - RANCHER_ADMIN_PASSWORD=${rancher_admin_password}
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /usr/bin/docker:/usr/bin/docker
        - /var/lib/rancher/etc:/var/lib/rancher/etc
