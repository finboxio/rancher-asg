#! /bin/bash
set -eo pipefail

CREDENTIALS_FILE=${CREDENTIALS_FILE:?"CREDENTIALS_FILE must be set"}

self=$(ec2-ip)
instance_id=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
region=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .region)
zone=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .availabilityZone)
instance_type=$(curl -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .instanceType)
tags=$(aws ec2 describe-instances --instance-ids $instance_id | jq -r '.Reservations[0].Instances[0].Tags | map(.Key + "=" + .Value) | reduce .[] as $label (""; . + $label + "&")')
labels="${tags}instance-type=${instance_type}&zone=${zone}&region=${region}&"

# Check s3 bucket for launch script
echo 'Checking S3 bucket for environment configuration'
aws s3 cp ${CREDENTIALS_FILE} credentials || true
if [[ -e ./credentials ]]; then source ./credentials; fi

# If launch script exists in s3
if [[ -z $RANCHER_REGISTRATION_TOKEN_ID && "$self" == "${ips[0]}" ]]; then
  echo 'Generating Rancher Registration Token'
  ## generate rancher registrationtokens
  RANCHER_REGISTRATION_TOKEN_ID=$(curl -X POST \
    -u "${RANCHER_ACCESS_KEY_ID}:${RANCHER_SECRET_ACCESS_KEY}" \
    -H 'Accept: application/json' \
    -H 'Content-Type: application/json' \
    -d "{\"name\":\"$RANCHER_DEPLOYMENT_ID\", \"description\":\"Auto-generated registration token for $RANCHER_DEPLOYMENT_ID hosts\"}" \
    "${RANCHER_URL}/v1/registrationtokens" | jq -r .id)

  state=
  while [[ "$state" != "active" ]]; do
    sleep 2
    state=$(curl -X GET \
      -u "${RANCHER_ACCESS_KEY_ID}:${RANCHER_SECRET_ACCESS_KEY}" \
      -H 'Accept: application/json' \
      "${RANCHER_URL}/v1/registrationtokens/$RANCHER_REGISTRATION_TOKEN_ID" | jq -r .state)
  done

  echo "export RANCHER_REGISTRATION_TOKEN_ID=$RANCHER_REGISTRATION_TOKEN_ID" >> rancher.token
  aws s3 cp rancher.token s3://$S3_BUCKET/rancher.token
elif [[ -z $RANCHER_REGISTRATION_TOKEN_ID ]]; then
  echo 'Could not register host...exiting in 10s'
  sleep 10
  exit 1
fi

cmd=$(curl -X GET \
  -u "${RANCHER_ACCESS_KEY_ID}:${RANCHER_SECRET_ACCESS_KEY}" \
  -H 'Accept: application/json' \
  "${RANCHER_URL}/v1/registrationtokens/$RANCHER_REGISTRATION_TOKEN_ID" | jq -r .command)

RANCHER_HOST_LABELS=$labels$RANCHER_HOST_LABELS
echo 'Registering host with labels '$RANCHER_HOST_LABELS

## start ranger-agent ~ running with root privileges no need for sudo.
COMMAND=(docker run -e CATTLE_HOST_LABELS=$RANCHER_HOST_LABELS ${cmd#*run})
exec "${COMMAND[@]}"
